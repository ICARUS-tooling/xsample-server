<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" xmlns:jsf="http://xmlns.jcp.org/jsf">
	
	<h:form id="form">
		<p:remoteCommand name="initQuery" action="#{queryPage.init}"
			process="@this" update="@form" oncomplete="query_initAllOutlines()" />
			
		<p:outputPanel id="sliceData" layout="block">			
			<h:inputHidden id="excerptStart" value="#{sliceData.begin}" />
			<h:inputHidden id="excerptEnd" value="#{sliceData.end}" />
			<h:inputHidden id="excerptThreshold" value="#{partData.limit}" readonly="#{true}" />
			<h:inputHidden id="excerptSegments" value="#{partData.segments}" readonly="#{true}" />
			<h:inputHidden id="excerptQuota" value="#{partData.quota}" readonly="#{true}" />
			<div jsf:rendered="#{sharedData.multiPartCorpus}">
				<h:inputHidden id="excerptOffset" value="#{partData.offset}" readonly="#{true}" />
				<h:inputHidden id="globalSegments" value="#{slicePage.segments}" readonly="#{true}" />
				<h:inputHidden id="globalThreshold" value="#{slicePage.limit}" readonly="#{true}" />
				<h:inputHidden id="globalQuota" value="#{corpusData.quota}" readonly="#{true}" />
				<h:inputHidden id="globalExcerpt" value="#{corpusData.excerpt}" readonly="#{true}" />
			</div>	
		</p:outputPanel>
		
		<p:outputPanel id="resultData" layout="block">		
			<h:inputHidden id="rawHits" value="#{resultData.rawHits}" readonly="#{true}" />
			<h:inputHidden id="mappedHits" value="#{resultData.mappedHits}" readonly="#{true}" />
			<h:inputHidden id="rawSegments" value="#{resultData.rawSegments}" readonly="#{true}" />
			<div jsf:rendered="#{sharedData.multiPartCorpus}">
				<h:inputHidden id="globalRawHits" value="#{resultsData.rawHits}" readonly="#{true}" />
				<h:inputHidden id="globalMappedSegments" value="#{resultsData.mappedHits}" readonly="#{true}" />
				<h:inputHidden id="globalRawSegments" value="#{resultsData.rawSegments}" readonly="#{true}" />
			</div>	
		</p:outputPanel>
		
		<!-- 
		<p:inputTextarea widgetVar="editor" value="#{queryData.query}" rows="6" cols="40" 
			placeholder="#{bundle['query.editor.placeholder']}"
			required="true">
			<p:ajax update="runQuery" />
		</p:inputTextarea> -->
				
		<p:textEditor widgetVar="editor" height="150" placeholder="#{bundle['query.editor.placeholder']}"
				value="#{queryData.query}" secure="true" required="true" allowBlocks="false"
				allowFormatting="false" allowImages="false" allowLinks="false" allowStyles="false">
			<f:facet name="toolbar">
				<span class="ql-formats">
					There be cool stuff for customizing queries...
				</span>
			</f:facet>
			<p:ajax update="runQuery" />
		</p:textEditor>
		
		<div>
			<p:messages for="queryMsgs" id="queryMsg" closable="true" redisplay="false" skipDetailIfEqualsSummary="true" />
			
			<p:commandButton id="runQuery" value="#{bundle['query.runQuery']}" action="#{queryPage.runQuery}" disabled="#{empty queryData.query}">
				<p:ajax oncomplete="query_refreshAllOutlines();"
						update="sliceData resultData queryMsg slice @this" />
			</p:commandButton>
		</div>
		<div jsf:id="slice">
			<div jsf:rendered="#{not empty resultData.rawHits or true}" class="outline-box">
				
				<p:separator />
				
				<div jsf:rendered="#{sharedData.multiPartCorpus}">
					<h:outputText value="#{bundle['slice.selectedCorpus']}" 
						style="margin-right: 5em" />
					<ui:include src="/select_corpus.xhtml">
						<ui:param name="limited" value="true" />
						<ui:param name="ajaxUpdate" value="sliceData sliceOutline" />
						<ui:param name="ajaxOncomplete" value="query_initAllOutlines()" />
						<ui:param name="changeHandler" value="#{slicePage}" />
						<ui:param name="handlerMethod" value="selectionChanged" />
					</ui:include>	
					<p:commandButton value="#{bundle['slice.resetAll']}" action="#{slicePage.reset}" process="@this" update="@form" />		
				</div>
				
				<!-- RAW HITS -->
				<h:outputText value="#{bundle['query.rawHits']}:" />
				<ui:include src="/outline.xhtml">
					<ui:param name="canvasId" value="rawHitsCanvas" />
					<ui:param name="canvasClass" value="excerpt-outline stack-top" />
					<ui:param name="showLegend" value="false" />
				</ui:include>
				
				<!-- MAPPED HITS -->
				<h:outputText value="#{bundle['query.mappedHits']}:" />
				<ui:include src="/outline.xhtml">
					<ui:param name="canvasId" value="mappedHitsCanvas" />
					<ui:param name="canvasClass" value="excerpt-outline stack-intermediate" />
					<ui:param name="showLegend" value="false" />
				</ui:include>
				
				<h:outputText value="#{bundle['query.sliceInfo']}:" />
				<br/>
				<h:outputText id="segmentsText" value="??" />
				<p:slider for="excerptStart,excerptEnd" 
					display="segmentsText" onSlide="updateExcerpt(event, ui);" 
					styleClass="excerpt-select" range="true" displayTemplate="{min} - {max}" 
					minValue="1" maxValue="#{partData.segments}">
					<p:ajax process="sliceData" oncomplete="initOutline();refreshGlobalOutline()" />
				</p:slider>  
				
				<h:outputLabel for="excerptSize" value="#{bundle['excerptSize']}: " />
				<h:outputText id="excerptSize" style="margin-top: 2em" value="??" /> 
				<br/>
				<h:outputLabel for="excerptPercent" value="#{bundle['excerptPercent']}: " />
				<h:outputText id="excerptPercent" style="margin-top: 2em" value="??" />
				<br/>
				
				<!-- SLICE -->
				<ui:include src="/outline.xhtml">
					<ui:param name="canvasId" value="outlineCanvas" />
					<ui:param name="canvasClass" value="excerpt-outline stack-intermediate" />
					<ui:param name="showLegend" value="#{not sharedData.multiPartCorpus}" />
				</ui:include>
						
				<!-- GLOBAL HITS -->
				<div jsf:rendered="#{sharedData.multiPartCorpus}">
					<p:separator />
					
					<h:outputText value="#{bundle['query.globalMappedHits']}: " />
					<br/>
					<ui:include src="/outline.xhtml">
						<ui:param name="canvasId" value="globalHitsCanvas" />
						<ui:param name="canvasClass" value="excerpt-outline stack-top" />
						<ui:param name="showLegend" value="false" />
					</ui:include>
					
					<h:outputText value="#{bundle['slice.completeExcerpt']}: " />
					<h:outputText id="globalSize" style="margin-top: 2em" value="??" /> 
					<h:outputText id="globalPercent" style="margin-top: 2em; margin-left: 2em" value="??" />
					<br/>
					<h:outputLabel for="totalPercent" value="#{bundle['totalPercent']}: " 
						rendered="#{not empty corpusData.quota}" />
					<h:outputText id="totalPercent" style="margin-top: 2em" 
						rendered="#{not empty corpusData.quota}" value="??" />
					<br/>
					<ui:include src="/outline.xhtml">
						<ui:param name="canvasId" value="globalOutlineCanvas" />
						<ui:param name="canvasClass" value="excerpt-outline stack-bottom" />
						<ui:param name="showLegend" value="true" />
					</ui:include>
				</div>	
			</div>
		</div>
		
		<p:separator />
		
		<div>
        	<p:messages id="navMsg" showSummary="true" showDetail="false" redisplay="false" />
			<p:commandButton value="#{bundle['back']}" action="#{queryPage.back}" process="@this" />
			<p:commandButton widgetVar="wv_continue" value="#{bundle['continue']}" 
				action="#{queryPage.next}" update="navMsg" />
		</div>
	</h:form>

				
	<h:outputScript library="js" name="xsample-common.js" target="body" />
	<h:outputScript library="js" name="xsample-slice.js" target="body" />
	<h:outputScript library="js" name="slice-ui.js" target="body" />
	<h:outputScript library="js" name="query-ui.js" target="body" />
	<h:outputScript>
		$('document').ready(function(){
			initQuery();
		});		

		function query_refreshAllOutlines() {
			refreshOutline()
			refreshGlobalOutline();
			refreshResults();
			refreshGlobalResults();
			console.log('query_refreshAllOutlines');
		}
		
		function query_initAllOutlines() {
			initOutline();
			initGlobalOutline();
			initResults();
			initGlobalResults();
			console.log('query_initAllOutlines');
		}
	</h:outputScript>
</ui:composition>